# install_swarm.yml
---
- name: Install Docker and setup Swarm
  hosts: nodes
  become: yes
  tasks:
    # Install prerequisites
    - name: Install required packages
      apt:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-docker
          - python3-jsondiff
        update_cache: yes
        state: present

    # Verify system architecture
    - name: Get system architecture
      debug:
        msg: "Architecture: {{ ansible_architecture }}"

    # Install Docker dependencies
    - name: Install Docker Python SDK
      apt:
        name: python3-docker
        state: present
        update_cache: yes

    # Setup Docker repository
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    # Install and start Docker
    - name: Install Docker
      apt:
        name: docker-ce
        update_cache: yes
        state: present

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add ansible user to docker group
      user:
        name: ansible
        groups: docker
        append: yes

    - name: Restart Docker service
      service:
        name: docker
        state: restarted

    - name: Reset SSH connection
      meta: reset_connection

- name: Initialize Swarm
  hosts: node1
  become: yes
  tasks:
    - name: Initialize Docker Swarm
      community.docker.docker_swarm:
        state: present
      register: swarm_info

    - name: Get join token
      command: docker swarm join-token -q worker
      register: join_token
      changed_when: false

    - name: Store join token
      set_fact:
        worker_token: "{{ join_token.stdout }}"

- name: Join workers to swarm
  hosts: "node2,node3"
  become: yes
  tasks:
    - name: Join swarm cluster
      community.docker.docker_swarm:
        state: join
        advertise_addr: "{{ ansible_host }}"
        join_token: "{{ hostvars['node1']['worker_token'] }}"
        remote_addrs: [ "{{ hostvars['node1']['ansible_host'] }}" ]

- name: Deploy test service
  hosts: node1
  become: yes
  vars:
    compose_file: /root/docker-compose.yml
    service_name: test-web
  tasks:
    - name: Deploy stack
      community.docker.docker_stack:
        name: "{{ service_name }}"
        compose:
          - version: '3.8'
            services:
              web:
                image: nginx:latest
                deploy:
                  replicas: 3
                ports:
                  - "80:80"
        state: present

    - name: Verify service
      command: docker service ls
      register: service_status
      changed_when: false

    - name: Show service status
      debug:
        var: service_status.stdout_lines
